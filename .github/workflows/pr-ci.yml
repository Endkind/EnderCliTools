name: PR CI

on:
  pull_request:
    branches:
      - main
      - master
    types: [opened, synchronize, reopened]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
#  unit-tests:
#    name: Rust Unit Tests
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Rust installieren (stable)
#        uses: dtolnay/rust-toolchain@stable
#        with:
#          toolchain: stable
#
#      - name: Cargo Cache
#        uses: Swatinem/rust-cache@v2
#
#      - name: Build-Check
#        run: cargo check --all --all-targets
#
#      - name: Tests ausführen
#        run: cargo test --all --all-features --no-fail-fast -- --nocapture

  pre-commit:
    name: pre-commit Hooks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Python 3.13 einrichten
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Pip Cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: pre-commit installieren & ausführen
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit
          pre-commit run --all-files
